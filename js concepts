// write a function which can concatenate two arrays
// push() mutates array
// concat() does not mutate array

// const mergeArrays = (arr1, arr2) => {
//   arr1.push(...arr2);
//   arr1.concat(...arr2);
//   return arr1;
// }

/* ========================================================= */
// for loop to find user name is beginner level instaed use array methods(some(), find(), findIndex())
// const users = [
// {id: 1, name: 'Jack', isActive: true},
// {id: 2, name: 'John', isActive: true},
// {id: 3, name: 'Mike', isActive: false},
// ]

// const isNameExists = (name, users) => users.find((user) => user.name === name)

// console.log(isNameExists('Jack', users))

/* ========================================================== */

//Find duplicates in the array 

// const uniqueArr = (arr) => {
//   return [...new Set(arr)]
// }

// const uniqueArr = (arr) => {
//   const result = [];
//   arr.forEach((item) => {
//     if(!result.includes(item)){
//       result.push(item);
//     }
//   })
//   return result;
// }

// const uniqueArr = (arr) => {
//     return arr.reduce((acc, el) => {
//       return acc.includes(el) ? [...acc] : [...acc, el]; 
//     }, [])
// }

// console.log(uniqueArr([1,1,2,2,3]))

/* ============================================================= */

// sort the array. sort() mutates the array [mutate - modifies]

const arr = [3, 2, 5, 1, 9, 7]

const result = arr.sort((a,b) => a - b); // acsending

const resultDec = arr.sort((a,b) => b - a); // descending

console.log(result)

======================================================================
// Q2: Sort an array of objects by the author's last name

const books = [
{name: 'Harry Potter', author: 'Joanne Rowling'},
{name: 'Warcross', author: 'Marie Lu'},
{name: 'THe Hunger Games', author: 'Suzanne Collins'}
];

const result = books.sort((book1, book2) => {
  const authorBook1 = book1.author.split(' ')[1];
  const authorBook2 = book2.author.split(' ')[1];
  
  return authorBook1 < authorBook2 ? -1 : 1

})
=======================================================================
// Q: Write a function which implement range
// range(1, 50)
// [1,2,3,.......,50]

// const range = (start, end) => {
//   const range = [];
//   for(let i = start; i < end; i++) {
//     range.push(i);
//   }
  
//   return range;
// }

// const range = (start, end) => {
//   return [...Array(end - start).keys()].map((el) => start + el)
// }

// console.log(range(40,50));

// Write a shuffle function which mixes the elements

// const shuffleItems = (arr) => {
//  return arr.map((item) => ({ sort: Math.random(), value: item }))
//      .sort((a, b) => a.sort - b.sort).map((a) => a.value); 
// }

// console.log(shuffleItems([1,2,3,4]))

// Find the number of occurrences of minimum value in the list of numbers

// const arr = [1, 2, 3, 1, 1, 1];

// const minValue = Math.min(...arr);

// console.log(minValue);

// const minArr = arr.filter((item) => item === minValue)
// console.log(minArr.length)

